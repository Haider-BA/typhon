#!/bin/bash
#
# Script:            make_depends
# Created by         Jeremie Gressier
# Usage              make_depends lower|upper filename
#
# Description:
#
# WRONG # This script parses f90 files in order to extract
# WRONG # file dependencies (MODULE). It can handle:
# WRONG #      use ok1                ! comment
# WRONG #      use ok2, ok3           ! comment
# WRONG #      use ok4, only not_me   ! comment
# WRONG #      use ok5, &             ! comment
# WRONG #          ok6                ! comment
# WRONG #
# WRONG # and writes
# WRONG #
# WRONG #  $(OD)/test.$(o): test.f90 \
# WRONG #                          $(OD)/ok1.$(o)    \
# WRONG #                          $(OD)/ok2.$(o)    \
# WRONG #                          $(OD)/ok3.$(o)    \
# WRONG #                          $(OD)/ok4.$(o)    \
# WRONG #                          $(OD)/ok5.$(o)    \
# WRONG #                          $(OD)/ok6.$(o)
#
# Caution: Problems have happened with comments containing no basic letters
# which can be not recognized by regexp wildcards (.*)

#-----------------------------------------------------------------
caseopt=$1 ; shift
case $caseopt in
  lower) trchangecase="A-Z a-z" ;;
  upper) trchangecase="a-z A-Z" ;;
  *)     echo "Error: unknown option: '$caseopt'" ; exit 1 ;;
esac

USE=$(echo use | tr $trchangecase)

# sed commands
spc="    "
seduse="s/^ *$USE  */$spc\$(PRJINCDIR)\\//"
sedmod="s/$/.\$(MODEXT)/"
sedend="s/$/ \\\\/"
# A continuation mark '\\' is inserted even at the end of the last line
# A following blank line is required

#-----------------------------------------------------------------
# try to get optional ROOT folder
DIR=$1
ROOTDIR=${1:-.}

if [ ! -d "$ROOTDIR" ] ; then
  echo "Error !!!"
  echo "pwd: $(pwd)"
  echo "arg: $DIR"
  echo "Directory $DIR does not exist"
  exit 1
fi

shift

DEPSFILE=$ROOTDIR/depends.make
rm -f $DEPSFILE

TMPF=$DEPSFILE.tmp
rm -f $TMPF

exitstatus=1
trapcmd="rm -f \"$TMPF\" ; eval \"exit \$exitstatus\""
trap "$trapcmd" INT TERM QUIT EXIT

#-----------------------------------------------------------------
echo "Building module dependencies in $DEPSFILE"

{
file=$(basename $0)
dir=$(basename $(dirname $0))
echo "# This file was created automatically by $dir/$file"
echo "# It can be overwritten"
echo "# (manual modifications are not recommended)"
} > $TMPF

for file in $(find $ROOTDIR -name '*.f90' | grep -v '/.#' | LC_ALL=C sort) ; do

  basename=$(basename $file .f90)

  moduledepend=$(
    grep -i -o '^ *use  *[^ !]*' $file |
      tr   $trchangecase   |
      sed "$seduse;$sedmod;$sedend"
    )

  # MODULE

  if [ -n "$(grep -i '^ *module ' $file)" ] ; then
    modulebase=$(basename $file .f90 | tr $trchangecase)
    {
    echo "$modulebase.source:=$file"
    echo "$modulebase.object:=$basename.o"
    echo "$basename.module:=$modulebase.\$(MODEXT)"
    echo "$basename.target: \$(PRJINCDIR)/$modulebase.\$(MODEXT)"
    echo
    echo "${modulebase}.\$(MODEXT): \$(PRJINCDIR)/${modulebase}.\$(MODEXT)"
    echo
    echo "\$(PRJINCDIR)/${modulebase}.\$(MODEXT): \\"
    echo "$spc$file \\"
    echo -e "${moduledepend:-\c}"
    echo
    } >> $TMPF
  fi

  # OBJET

  {
  echo "\$(PRJOBJDIR)/$basename.o: \\"
  echo "$spc$file \\"
  echo -e "${moduledepend:-\c}"
  echo
  } >> $TMPF

done

mv $TMPF $DEPSFILE
exitstatus=0

