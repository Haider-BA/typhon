#!/bin/ksh
#
# Script:            make_depends
# Created by         Jeremie Gressier
# Usage              make_depends lower|upper filename
#
# Description:		
#
# This script parses f90 files in order to extract
# file dependencies (MODULE). It can handle:
#      use ok1                ! comment
#      use ok2, ok3           ! comment
#      use ok4, only not_me   ! comment
#      use ok5, &             ! comment
#          ok6                ! comment
#
# and writes
#
#  $(OD)/test.$(o): test.f90 \
#                          $(OD)/ok1.$(o)    \
#                          $(OD)/ok2.$(o)    \
#                          $(OD)/ok3.$(o)    \
#                          $(OD)/ok4.$(o)    \
#                          $(OD)/ok5.$(o)    \
#                          $(OD)/ok6.$(o)    \
#
# Attention : la reconnaissance des mots-clefs ne dépend pas de la casse
# mais par contre, les fichiers .o DOIVENT TOUS exister en minuscules uniquement
# (cela impose souvent que les noms des fichiers sources doivent etre en minuscules)
#
# Attention : des problemes ont ete remarqués avec des commentaires contenant des lettres 
# accentuées qui ne sont pas considérées par les jokers regexp .*

#-----------------------------------------------------------------
case $1
  lower) changecase="A-Z a-z" ;;
  upper) changecase="a-z A-Z" ;;
  *)     echo Panic: unknown option :$1:
esac

#-----------------------------------------------------------------
# try to get optional output file
shift
TARGET=${1:-depends.make}

#-----------------------------------------------------------------
echo Building module dependencies in $TARGET

rm $TARGET 2> /dev/null

echo \# This file has been created automatically      > $TARGET
echo \# It can be overwritten                        >> $TARGET
echo \# \(manual modifications are not recommended\) >> $TARGET

for fic in *.f90 ; do

  # MODULE

  if [ -n "$(grep -i '^ *module ' $fic)" ] ; then
    module=$(echo ${fic%.f90} | tr A-Z a-z)
    #echo $module.module:=${PWD##*/}/$fic >> $TARGET
    echo $module.source:=${PWD##*/}/$fic >> $TARGET
    echo $module.objet:=${fic%.f90}.o >> $TARGET
    echo '$(PRJINC)/'${module}.'$(MOD)': ${PWD##*/}/$fic \\ >> $TARGET
    grep -i '^ *use ' $fic       | 
      sed 's/!.*$//'             | 
      tr   A-Z a-z               |
      sed 's/ *$/.$(MOD)    \\/' | 
      sed 's/^ *use /                         $(PRJINC)\//' >> $TARGET
    echo >> $TARGET
  fi

  # OBJET

  echo '$(PRJOBJ)/'${fic%.f90}.o: \\   >> $TARGET
  grep -i '^ *use ' $fic       | 
    sed 's/!.*$//'             | 
    tr   A-Z a-z               |
    sed 's/ *$/.$(MOD)    \\/' | 
    sed 's/^ *use /                         $(PRJINC)\//' >> $TARGET
  echo >> $TARGET

done

