#!/bin/sh -u

function echodo()  { echo "$@" ; eval "$@" ;}
function echoerr() { echo "$@" >/dev/stderr ;}
function starmod() { echo "$@" | sed 's/./@/g' ;}
function starspc() { echo "$@" | sed 's/./ /g;s/^.../@@@/;s/...$/@@@/' ;}
function errmsg() {
  nmax=0
  for f in "$@" ; do
    n=$(echo "$f" | wc -m)
    [[ $n -gt $nmax ]] && nmax=$n
  done
}

opt=""
[[ $# -gt 0 ]] && [[ "$1" = -f ]] && opt="-f" && shift
[[ $# -gt 0 ]] && echo "ERROR: unknown options: $@" && exit 1

[[ "$opt" = -f ]] \
  && { ifechodo=echodo ; ifechoerr=:       ;} \
  || { ifechodo=echo   ; ifechoerr=echoerr ;}

dir=$(dirname $0)
absdir=$(cd $dir ; pwd)
localdir=$(pwd)

echoerr

[[ "$absdir" != "$localdir" ]] && echodo "cd $dir"
[[ $? -ne 0 ]] && echoerr "ERROR: cannot cd" && exit 1

listfail=""
for f in *.f90 ; do
  $ifechodo ifort \
    -I.. -I../Include \
    -L../Obj -L../Lib ${f} \
    -lmpich -lt_math -lt_mesh -lt_modcom \
    -o ${f%.f90}.exe || listfail="$listfail $f"
done

[[ "$absdir" != "$localdir" ]] && echodo cd "$localdir"

echoerr

exitstatus=0

if [ "$opt" = -f ] ; then
  [[ -n "$listfail" ]] && {
    msg="@@@   ERROR: Compilation failed for:                 @@@"
    echoerr "$(starmod "$msg")"
    echoerr "$(starspc "$msg")"
    echoerr "$msg"
    for f in $listfail ; do
      g=$(echo $f|sed 's/././g;s/./%/')
      echoerr "$(echo "$msg" | sed "s/[^ @C]/ /g;s/C  /- %/;s#$g#$f#")"
    done
    echoerr "$(starspc "$msg")"
    echoerr "$(starmod "$msg")"
    exitstatus=1
  } || {
    msg="@@@    Compilation successful    @@@"
    echoerr "$(starmod "$msg")"
    echoerr "$(starspc "$msg")"
    echoerr "$msg"
    echoerr "$(starspc "$msg")"
    echoerr "$(starmod "$msg")"
  }
  echoerr
fi

$ifechoerr "WARNING : Commands are written only, nothing is done"
$ifechoerr "          You must type the commands to compile or:"
$ifechoerr "          $0 -f"

$ifechoerr

exit $exitstatus
