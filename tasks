Description détaillée des tâches (référence au numéro de tâche lors "cvs commit")
---------------------------------------------------------------------------------

---------------------------------------------------------------------------------
Task 0001 (Jérémie) : SCH : Bug dans le calcul des gradients
---------------------------------------------------------------------------------
Les numéros d'indices gauche et droit étaient mal définis dans le calcul du 
second membre. On avait forcément des gradients nuls.

---------------------------------------------------------------------------------
Task 0002 (Jérémie) : Val : maillage 2D TRI - méthode flux FULL
---------------------------------------------------------------------------------
Test de maillage avec TRI, validation de la méthode de calcul de gradients FULL
- Le calcul des gradients (FULL) plante car les cellules limites ne sont pas utilisées
  Certains TRI ont deux cellules voisines limites, donc un seul voisin interne, ce
  qui provoque la dégérescence de la matrice à inverser. cf task 0003
- Validation de la méthode FULL sur maillage CYL1D/TRI avec TRI très aplatis
  (cyl-qtri.cgns et cyl-qtri20.cgns). Le maillage cyl-tri.cgns est une version après
  lissage

---------------------------------------------------------------------------------
Task 0003 (Jérémie) : SCH : amélioration calcul gradients (avec ghost-cell)
---------------------------------------------------------------------------------
(obligatoire pour les TRI, cf task 0002)
Les cellules limites sont incluses dans le calcul des gradients. Il est nécessaire
de faire le calcul des conditions aux limites avant le calcul des gradients.
Dans calc_gradient, les contributions sont codées deux fois pour éviter des "if"
dans les boucles.
fichiers: integration_zone, calc_gradient

---------------------------------------------------------------------------------
Task 0004 (Emmanuel) : COUPL : Première version de couplage instationnaire
---------------------------------------------------------------------------------
A chaque cycle, décroissance de residumax_cycle (provisoirement affecté à la main
dans le code) dans toutes les zones, à partir du residu de référence local.
Arret quand les résidus de toutes les zones ont décru d'au moins  residumax (fixé 
dans le menu) à partir du résidu de référence du premier cycle.
Pas de corrections de flux en stationnaire
Modification du déclenchement des échanges : plus en instant d'échange mais en
numéro de cycle d'échange.
fichiers : integration, integration_cycle, integration_ustdomaine, integration_zone,
 echange_zonedata, echange_zonematch, corr_varprim_kdif, MODINFO, def_project

---------------------------------------------------------------------------------
Task 0005 (Jérémie) : Out : Définition de capteurs
---------------------------------------------------------------------------------
Définition des structures de données "capteurs", paramétrés par des blocs "PROBE"
- définition des types de capteurs
- définition des quantités
- lecture de paramètres BOCO_FIELD, BOCO_INTEGRAL
- vérification de la condition limite cible

---------------------------------------------------------------------------------
Task 0006 (Emmanuel) : COUPL : modification du type de condition COUPLING :
                               orientation vers des conditions "naturelles"
---------------------------------------------------------------------------------
Le type de condition "COUPLING" n'est plus un type de condition aux limites à
part entière (plus de variable bc_coupling), mais dirige vers des conditions de 
Dirichlet, de Von Neumann ou de convection.
Modification des conditions aux limites nécessaire : elles ne sont plus 
nécessairement uniformes.
Suppression de la variable conditions_coupling dans ZONE_COUPLING : le stockage
des données calculées à l'échange se fait maintenant directement dans les
tableaux des conditions limites.
Provisoirement, bocotype("COUPLING")=bc_wall_isoth : condition de Dirichlet par
défaut à l'initialisation.
Mise à jour après chaque cycle des type de condition aux limites au raccord : 
possibilité de changer à chaque cycle.

fichiers : MENU_BOCO, MENU_SOLVER, trait_zoneparam, def_boco, ZONE_COUPLING, 
           calcboco_ust, integration, comp_flux, init_world, echange_zonematch, echange, 
           MENU_KDIF, echange_kdif, stock_kdif_cond_coupling, def_boco_kdif, 
           accumulfluxcorr_kdif, init_coupling_kdif
fichiers nouveaux : init_boco, init_boco_ust, calcboco_ust_unif, 
           calcboco_ust_nunif, init_boco_kdif, calcboco_kdif_ust_unif, 
           calcboco_kdif_ust_nunif, setboco_kdif_isoth_unif, setboco_kdif_isoth_nunif
fichiers supprimés : calcboco_ust_coupling, calcboco_ust_coupling_face, 
           calcboco_kdif_coupling_face, calcboco_kdif_ust

---------------------------------------------------------------------------------
Task 0007 (Jérémie) : Restructuration du calcul des champs prim, grad, et cond. lim.
---------------------------------------------------------------------------------

---------------------------------------------------------------------------------
Task 0008 (Jérémie) : Développement des capteurs
---------------------------------------------------------------------------------

---------------------------------------------------------------------------------
Task 0009 (Emmanuel) : COUPL : connectivités de zones en maillage coincident:
---------------------------------------------------------------------------------
Les indices de faces concernées par les conditions aux limites aux interfaces
de couplage sont liés par une variable connface de la structure zone_coupling.
On identifie les faces coincidentes pendant l'initialisation en comparant
les centres des faces (minimum des distances entre les centres, pour des
questions de précision numérique)

fichiers : ZONE_COUPLING, init_coupling, calc_connface, echange_zonematch, ech_data_kdif,
           donnees_echange, echange, calcdifflux, calcdifflux_kdif
fichiers nouveaux : extract_centre
fichiers supprimés : init_coupling_kdif, extract_points, extract_pts_index


---------------------------------------------------------------------------------
Task 0011 (Emmanuel) : COUPL : orientation des types de correction selon
                               les cas (avant ou après échange, valeur du
                               coefficient de correction)
---------------------------------------------------------------------------------
Selon les valeurs des nombres de Fourier dans les deux zones couplées,
on oriente vers une correction avant (précision)  ou après (stabilité) 
l'échange (calcul des quantités d'interface).
Cas d'égalité des nombres de Fourier d'intégration : 
* si le nombre de Fourier de cycle (basé sur le pas de cycle et le 
  pas de maillage) est inférieur à 3 (théorie 1D : 4) dans les deux zones,
  correction AVANT, coeff de correction de 0.5.
* sinon, correction APRES, coeff de correction 0.5.
Cas de rapport supérieur à 10 (choix arbitraire de rapport important) 
  (ou inférieur à 0.1) : correction AVANT, coeff de correction 1 (ou 0).
Autres cas : correction APRES, coeff de correction 0.5.

Calcul de nombre de Fourier d'intégration et de cycle : choix provisoire (?) de
  prendre la valeur maximale sur l'ensemble des cellules de la zone.

fichiers : echange_zonematch.f90, echange_zonedata.f90
fichiers nouveaux : calc_fourier.f90, calc_fouriercycle.f90, 
                    calc_kdif_fourier.f90

---------------------------------------------------------------------------------
Task 0012 (Jérémie) : Make : Compilation sur SUN
---------------------------------------------------------------------------------
* mise à jour de fichiers, suite à la sévérité du compilateur
* mise à jour des paramètres pour SUN
* problème de gestions des modules (noms en minuscules)

---------------------------------------------------------------------------------
Task 0013 (Jérémie) : Make : Mise en forme de la DOC
---------------------------------------------------------------------------------
* catalogue DOC
* fichiers principaux pour compilation avec structure de document

---------------------------------------------------------------------------------
Task 0020 (Jérémie) : Make : Procédures de base pour les méthodes VORTEX
---------------------------------------------------------------------------------
- fichier *make (catalogue VORTEX)
- traitement des paramètres (solveur, maillage, conditions limites et initiales)
- lecture de maillage TYPHMSH
- appel d'intégration (integration_zone_lag)
- remplissage (matrice pour un corps) et résolution
- sauvegarde de résultats (avec recalcul des vitesses induites et pressions)

---------------------------------------------------------------------------------
Task 0021 (Jérémie) : Make : solveurs VORTEX / KDIF
---------------------------------------------------------------------------------
- correction d'erreur induite sur KDIF

---------------------------------------------------------------------------------
Task 0022 (Jérémie) : Make : solveur VORTEX : débuggage et validation
---------------------------------------------------------------------------------
- correction des calculs de vitesses induites et coefficients associés
  (Erreur dans Katz et Plotkin)
- validation dans VORTEX/CERCLE et VORTEX/VANVOOREN

---------------------------------------------------------------------------------
Task 0023 (Jérémie) : Make : fusion avec la branche de développement VORTEX
---------------------------------------------------------------------------------
- fusion et gestion des conflits

---------------------------------------------------------------------------------
Task 0024 (Jérémie) : Make : Suppression des structures de données STRMESH 
---------------------------------------------------------------------------------
- les données de maillage structurées seront représentées en non structuré

---------------------------------------------------------------------------------
Task 0025 (Jérémie) : Make : Integration de KDIF dans les structures MGRID
---------------------------------------------------------------------------------
- modification et compilation effectuée
- validation KDIF/CYL1D, COUPLING/DEFORME, VORTEX/VANVOOREN

---------------------------------------------------------------------------------
Task 0026 (Jérémie) : Make : Implicitation directe LU
---------------------------------------------------------------------------------
- librairie MATH : création et mouvement de modules de MODCOM
- définition des types d'intégration temporelle et d'implicitation (MENU_PARAM)
- définition de routines d'inversion algébrique (SPARSE_MAT, dlu_lu)
- modification des appels de routines d'integration temporelle
  (integration_grid, explicit_step, implicit_step)
