Description détaillée des tâches (référence au numéro de tâche lors "cvs commit")
---------------------------------------------------------------------------------

---------------------------------------------------------------------------------
Task 0001 (Jérémie) : SCH : Bug dans le calcul des gradients
---------------------------------------------------------------------------------
Les numéros d'indices gauche et droit étaient mal définis dans le calcul du 
second membre. On avait forcément des gradients nuls.

---------------------------------------------------------------------------------
Task 0002 (Jérémie) : Val : maillage 2D TRI - méthode flux FULL
---------------------------------------------------------------------------------
Test de maillage avec TRI, validation de la méthode de calcul de gradients FULL
- Le calcul des gradients (FULL) plante car les cellules limites ne sont pas utilisées
  Certains TRI ont deux cellules voisines limites, donc un seul voisin interne, ce
  qui provoque la dégérescence de la matrice à inverser. cf task 0003
- Validation de la méthode FULL sur maillage CYL1D/TRI avec TRI très aplatis
  (cyl-qtri.cgns et cyl-qtri20.cgns). Le maillage cyl-tri.cgns est une version après
  lissage

---------------------------------------------------------------------------------
Task 0003 (Jérémie) : SCH : amélioration calcul gradients (avec ghost-cell)
---------------------------------------------------------------------------------
(obligatoire pour les TRI, cf task 0002)
Les cellules limites sont incluses dans le calcul des gradients. Il est nécessaire
de faire le calcul des conditions aux limites avant le calcul des gradients.
Dans calc_gradient, les contributions sont codées deux fois pour éviter des "if"
dans les boucles.
fichiers: integration_zone, calc_gradient

---------------------------------------------------------------------------------
Task 0004 (Emmanuel) : COUPL : Première version de couplage instationnaire
---------------------------------------------------------------------------------
A chaque cycle, décroissance de residumax_cycle (provisoirement affecté à la main
dans le code) dans toutes les zones, à partir du residu de référence local.
Arret quand les résidus de toutes les zones ont décru d'au moins  residumax (fixé 
dans le menu) à partir du résidu de référence du premier cycle.
Pas de corrections de flux en stationnaire
Modification du déclenchement des échanges : plus en instant d'échange mais en
numéro de cycle d'échange.
fichiers : integration, integration_cycle, integration_ustdomaine, integration_zone,
 echange_zonedata, echange_zonematch, corr_varprim_kdif, MODINFO, def_project

---------------------------------------------------------------------------------
Task 0005 (Jérémie) : Out : Définition de capteurs
---------------------------------------------------------------------------------
Définition des structures de données "capteurs", paramétrés par des blocs "PROBE"
- définition des types de capteurs
- définition des quantités
- lecture de paramètres BOCO_FIELD, BOCO_INTEGRAL
- vérification de la condition limite cible

---------------------------------------------------------------------------------
Task 0006 (Emmanuel) : COUPL : modification du type de condition COUPLING :
                               orientation vers des conditions "naturelles"
---------------------------------------------------------------------------------
Le type de condition "COUPLING" n'est plus un type de condition aux limites à
part entière (plus de variable bc_coupling), mais dirige vers des conditions de 
Dirichlet, de Von Neumann ou de convection.
Modification des conditions aux limites nécessaire : elles ne sont plus 
nécessairement uniformes.
Suppression de la variable conditions_coupling dans ZONE_COUPLING : le stockage
des données calculées à l'échange se fait maintenant directement dans les
tableaux des conditions limites.
Provisoirement, bocotype("COUPLING")=bc_wall_isoth : condition de Dirichlet par
défaut à l'initialisation.
Mise à jour après chaque cycle des type de condition aux limites au raccord : 
possibilité de changer à chaque cycle.

fichiers : MENU_BOCO, MENU_SOLVER, trait_zoneparam, def_boco, ZONE_COUPLING, 
           calcboco_ust, integration, comp_flux, init_world, echange_zonematch, echange, 
           MENU_KDIF, echange_kdif, stock_kdif_cond_coupling, def_boco_kdif, 
           accumulfluxcorr_kdif, init_coupling_kdif
fichiers nouveaux : init_boco, init_boco_ust, calcboco_ust_unif, 
           calcboco_ust_nunif, init_boco_kdif, calcboco_kdif_ust_unif, 
           calcboco_kdif_ust_nunif, setboco_kdif_isoth_unif, setboco_kdif_isoth_nunif
fichiers supprimés : calcboco_ust_coupling, calcboco_ust_coupling_face, 
           calcboco_kdif_coupling_face, calcboco_kdif_ust

---------------------------------------------------------------------------------
Task 0007 (Jérémie) : Restructuration du calcul des champs prim, grad, et cond. lim.
---------------------------------------------------------------------------------

---------------------------------------------------------------------------------
Task 0008 (Jérémie) : Développement des capteurs
---------------------------------------------------------------------------------

---------------------------------------------------------------------------------
Task 0009 (Emmanuel) : COUPL : connectivités de zones en maillage coincident:
---------------------------------------------------------------------------------
Les indices de faces concernées par les conditions aux limites aux interfaces
de couplage sont liés par une variable connface de la structure zone_coupling.
On identifie les faces coincidentes pendant l'initialisation en comparant
les centres des faces (minimum des distances entre les centres, pour des
questions de précision numérique)

fichiers : ZONE_COUPLING, init_coupling, calc_connface, echange_zonematch, ech_data_kdif,
           donnees_echange, echange, calcdifflux, calcdifflux_kdif
fichiers nouveaux : extract_centre
fichiers supprimés : init_coupling_kdif, extract_points, extract_pts_index

---------------------------------------------------------------------------------
Task 0010 (Emmanuel) : Condition limite de convection, et de Von Neumann
---------------------------------------------------------------------------------
Condition de convection : flux=h*(T-Tref).
Convention flux entrant.
Evaluation d'un point fictif (température limite évaluée pour le calcul des
gradients (condition de Neumann) et pour à la fois le calcul des gradients
et le calcul de flux=h*(T-Tref) (condition de convection).
Condition uniforme ou non.

fichiers : MENU_SOLVER, def_boco, MENU_KDIF, calcboco_kdif_ust_unif, calcboco_kdif_ust_nunif,
           def_boco_kdif, init_boco_kdif, integration_kdif_ust, conditions_limites,
           DEFZONE, integration_zone, calcboco_ust,
           calcboco_ust_unif, calcboco_ust_nunif, USTMESH
fichiers nouveaux : setboco_kdif_flux_unif, setboco_kdif_flux_nunif, setboco_kdif_hconv_unif,
                    setboco_kdif_hconv_nunif, fluxlimite

---------------------------------------------------------------------------------
Task 0011 (Emmanuel) : COUPL : orientation des types de correction selon
                               les cas (avant ou après échange, valeur du
                               coefficient de correction)
---------------------------------------------------------------------------------
Selon les valeurs des nombres de Fourier dans les deux zones couplées,
on oriente vers une correction avant (précision)  ou après (stabilité) 
l'échange (calcul des quantités d'interface).
Cas d'égalité des nombres de Fourier d'intégration : 
* si le nombre de Fourier de cycle (basé sur le pas de cycle et le 
  pas de maillage) est inférieur à 3 (théorie 1D : 4) dans les deux zones,
  correction AVANT, coeff de correction de 0.5.
* sinon, correction APRES, coeff de correction 0.5.
Cas de rapport supérieur à 10 (choix arbitraire de rapport important) 
  (ou inférieur à 0.1) : correction AVANT, coeff de correction 1 (ou 0).
Autres cas : correction APRES, coeff de correction 0.5.

Calcul de nombre de Fourier d'intégration et de cycle : choix provisoire (?) de
  prendre la valeur maximale sur l'ensemble des cellules de la zone.

fichiers : echange_zonematch.f90, echange_zonedata.f90
fichiers nouveaux : calc_fourier.f90, calc_fouriercycle.f90, 
                    calc_kdif_fourier.f90

---------------------------------------------------------------------------------
Task 0012 (Jérémie) : Make : Compilation sur SUN
---------------------------------------------------------------------------------
* mise à jour de fichiers, suite à la sévérité du compilateur
* mise à jour des paramètres pour SUN
* problème de gestions des modules (noms en minuscules)

---------------------------------------------------------------------------------
Task 0013 (Jérémie) : Make : Mise en forme de la DOC
---------------------------------------------------------------------------------
* catalogue DOC
* fichiers principaux pour compilation avec structure de document

---------------------------------------------------------------------------------
Task 0020 (Jérémie) : Make : Procédures de base pour les méthodes VORTEX
---------------------------------------------------------------------------------
- fichier *make (catalogue VORTEX)
- traitement des paramètres (solveur, maillage, conditions limites et initiales)
- lecture de maillage TYPHMSH
- appel d'intégration (integration_zone_lag)
- remplissage (matrice pour un corps) et résolution
- sauvegarde de résultats (avec recalcul des vitesses induites et pressions)

---------------------------------------------------------------------------------
Task 0021 (Jérémie) : Make : solveurs VORTEX / KDIF
---------------------------------------------------------------------------------
- correction d'erreur induite sur KDIF

---------------------------------------------------------------------------------
Task 0022 (Jérémie) : Make : solveur VORTEX : débuggage et validation
---------------------------------------------------------------------------------
- correction des calculs de vitesses induites et coefficients associés
  (Erreur dans Katz et Plotkin)
- validation dans VORTEX/CERCLE et VORTEX/VANVOOREN

---------------------------------------------------------------------------------
Task 0023 (Jérémie) : Make : fusion avec la branche de développement VORTEX
---------------------------------------------------------------------------------
- fusion et gestion des conflits

---------------------------------------------------------------------------------
Task 0024 (Jérémie) : Make : Suppression des structures de données STRMESH 
---------------------------------------------------------------------------------
- les données de maillage structurées seront représentées en non structuré

---------------------------------------------------------------------------------
Task 0025 (Jérémie) : Make : Integration de KDIF dans les structures MGRID
---------------------------------------------------------------------------------
- modification et compilation effectuée
- validation KDIF/CYL1D, COUPLING/DEFORME, VORTEX/VANVOOREN

---------------------------------------------------------------------------------
Task 0026 (Jérémie) : Make : Implicitation directe LU
---------------------------------------------------------------------------------
- librairie MATH : création et mouvement de modules de MODCOM
- définition des types d'intégration temporelle et d'implicitation (MENU_PARAM)
- définition de routines d'inversion algébrique (SPARSE_MAT, dlu_lu)
- modification des appels de routines d'integration temporelle
  (integration_grid, explicit_step, implicit_step)

---------------------------------------------------------------------------------
Task 0027 (Jérémie) : IHM : affichage intermittent des itérations
---------------------------------------------------------------------------------
- intégrer en dur dans le source de integrationmacro_zone

---------------------------------------------------------------------------------
Task 0028 (Jérémie) : SOLV : résolution par la méthode de Jacobi
---------------------------------------------------------------------------------
- procédure de calcul dlu_jacobi
- lecture paramètres MAX_IT et INV_RES pour convergence de la méthode itérative

---------------------------------------------------------------------------------
Task 0029 (Jérémie) : IHM : choix du critère de convergence de zone
---------------------------------------------------------------------------------
- critère de convergence global par défaut
- possibilité de choix d'un autre critère dans le bloc TIME_PARAM / clef RESIDUALS

---------------------------------------------------------------------------------
Task 0030 (Jérémie) : Out : sortie au format VTK
---------------------------------------------------------------------------------
- sortie pour KDIF uniquement
- format CELL_DATA, connectivité CELL->VTEX

---------------------------------------------------------------------------------
Task 0031 (Jérémie) : Val : maillage TETRA
---------------------------------------------------------------------------------
- correction de bug à la lecture de maillage CGNS de TETRA
- cas de validation sur SPHERE

---------------------------------------------------------------------------------
Task 0032 (Emmanuel) : COUPL : Différents types de correction 
---------------------------------------------------------------------------------
- corrections BEF_EXCH (dans cellules limitrophes avant échange), 
  AFT_EXCH (dans cellules limitrophes après échange), EQ_BOCOT (condition
  limite de température équilibrée), NEQ_BOCOT (condition limite de température
  non équilibrée), SPLIT_REG (répartie régulièrement), SPLIT_GEO (répartie en
  appliquant un certain pourcentage du reste à chaque itération)

---------------------------------------------------------------------------------
Task 0033 (Emmanuel) : COUPL : Modification de l'orientation de correction
---------------------------------------------------------------------------------
- Le coefficient de correction est donné en fonction du rapport des 
  (diffusivité/volume de cellule) des deux domaine couplés.

---------------------------------------------------------------------------------
Task 0034 (Emmanuel) : Out
---------------------------------------------------------------------------------
- sortie des températures d'interface en fct du temps, flux d'interface en fct
  du temps et valeur de correction en fct du temps (TYPE = resp. WALLTEMP, FLUX
  et CORRECTION)

---------------------------------------------------------------------------------
Task 0035 (Emmanuel) : KDIF
---------------------------------------------------------------------------------
- condition initiale de température non uniforme : loi linéaire.

---------------------------------------------------------------------------------
Task 0036 (Jérémie) : Make : sortie au format VTK
---------------------------------------------------------------------------------
- mémorisation à la lecture de la connectivité cell->vtex 
  (USTMESH, cgns2typhon_ustmesh)

---------------------------------------------------------------------------------
Task 0037 (Jérémie) : Val : maillage TETRA/PRISM
---------------------------------------------------------------------------------
- modification de "createface_fromcgns" pour la recherche de faces communes
  à différentes familles d'éléments
- cas de validation sur SPHERE/HYB : PROBLEME DE CONVERGENCE

---------------------------------------------------------------------------------
Task 0039 (Jérémie) : Solv : Optimisation de la structure DLU (SPARSE_MAT)
---------------------------------------------------------------------------------
- MESH : swap of indexes in face->cell connectivity so that ic1 < ic2
- MATH : optimization thanks to the previous convention
: decrease of 27% global cpu time, 31% of dlu_jacobi cpu time

---------------------------------------------------------------------------------
Task 0040 (Jérémie) : Make : procédures de base pour solveur EQNS
---------------------------------------------------------------------------------
- définition des structures de conditions limites (MENU_NS)
- constantes de type de conditions limites (VARCOM)
- lecture des conditions limites (def_boco, def_boco_ns)

---------------------------------------------------------------------------------
Task 0041 (Emmanuel) : Make : liste chainée de bocofield (grid)
---------------------------------------------------------------------------------
- ajout de champ générique de grille (MGRID)
- lien chainé de structure de champ générique et désallocation de liste chainée
  de champ générique (DEFFIELD)

---------------------------------------------------------------------------------
Task 0041 (Jérémie) : Make : compilation MPI/Sequentiel
---------------------------------------------------------------------------------
- librairie TYPHON EXCHANGE
- définition de procédures en double pour le séquentiel et le parallèle
- adapatation des Makefile

---------------------------------------------------------------------------------
Task 0043 (Jérémie) : NS : reading et set-up of boundary conditions
---------------------------------------------------------------------------------
- sub/supersonic inlet & outlet
- uniform initialization

---------------------------------------------------------------------------------
Task 0044 (Jérémie) : NS : initialization parameters et actual initialization
---------------------------------------------------------------------------------
- sub/supersonic inlet & outlet
- uniform initialization

---------------------------------------------------------------------------------
Task 0045 (Emmanuel) : Coupl : raccord par conditions de convection et convection
                               /Dirichlet
---------------------------------------------------------------------------------
Couplage par conditions de convection (COUPLING : BOCOTYPE = CONVECTION), 
 convection/Dirichlet ( BOCOTYPE = CONV_DIR) ou Dirichlet/convection 
 (BOCOTYPE = DIR_CONV) (Dirichlet -> BOCOTYPE = DIRICHLET, par défaut)

Fichiers modifiés : VARCOM, MENU_COUPLING, def_coupling, integration, init_world, 
                    init_coupling, stock_kdif_cond_coupling, echange_kdif
Fichiers nouveaux : update_couplingboco, update_couplingboco_kdif

---------------------------------------------------------------------------------
Task 0046 (Jérémie) : NS : main computational subroutines
---------------------------------------------------------------------------------
- transformation between primitive and conservative variables
- flux calls

---------------------------------------------------------------------------------
Task 0048 (Jérémie) : Make : Restructuring calcboco subroutines (uniform or not)
---------------------------------------------------------------------------------
- simplification of call tree (uniform or not)
  (removing calcboco_ust_unif/nunif)
- merge EQKDIF calcboco* and setboco*


---------------------------------------------------------------------------------
Task 0049 (Jérémie) : NS : Calculation of boundary conditions
---------------------------------------------------------------------------------
- implementation of symmetry, inlet (sub/sup), outlet(sub/sup)

---------------------------------------------------------------------------------
Task 0050 (Jérémie) : NS : HLLE numerical flux
---------------------------------------------------------------------------------
- roe average
- HLLE flux

---------------------------------------------------------------------------------
Task 0052 (Emmanuel) : KDIF : Bug : non uniform convection boundary condition
---------------------------------------------------------------------------------
modified file : setboco_kdif_hconv 
corrected error : inversion of h and T

---------------------------------------------------------------------------------
Task 0053 (Jérémie) : Out : Generalization of VTK outputs (scalars & vectors)
---------------------------------------------------------------------------------
- VTK scalars and vectors writers
- KDIF & NS solvers outputs

---------------------------------------------------------------------------------
Task 0054 (Jérémie) : NS : Validation on uniform test case
---------------------------------------------------------------------------------
- NRG/EULER/UNI
- Bug HLLE flux

---------------------------------------------------------------------------------
Task 0054 (Jérémie) : NS : Validation on 2D shock reflection (debug HLLE)
---------------------------------------------------------------------------------
- VALIDATION/EULER/SHOCK-REFX/FLAT
- Bug HLLE flux

---------------------------------------------------------------------------------
Task 0057 (Jérémie) : GUI : TYMON user interface (Typhon monitor)
---------------------------------------------------------------------------------
- basic display 
- reads monres.001

---------------------------------------------------------------------------------
Task 0058 (Jérémie) : Mesh : Bug correction for mesh with QUAD faces
---------------------------------------------------------------------------------
- known problem : bad position of prism center (KDIF/SPHERE/HYB)
- calc_ust_face : bug in the computation of face gravity center

---------------------------------------------------------------------------------
Task 0059 (Jérémie) : Val/NS : validation case for inviscid flow (SHOCK-REFX/DIFFRACTION)
---------------------------------------------------------------------------------
- unsteady moving shock wave past a corner

---------------------------------------------------------------------------------
Task 0060 (Jérémie) : AMR : AMR parameters
---------------------------------------------------------------------------------
- structures and parameters reading (MENU_AMR, def_amr)
- SHOCK-REFX/FLAT/AMR case

---------------------------------------------------------------------------------
Task 0062 (Jérémie) : Out : Residual monitors
---------------------------------------------------------------------------------
- initialization of history files (monres, monphy) (MAIN/init_capteurs)
- new structure in ZONE : probe data and parameters (to be done)
- automatic initialization of residual history for steady cases

---------------------------------------------------------------------------------
Task 0065 (Jérémie) : Make : Compilation with intel fortran 8.1
---------------------------------------------------------------------------------
- handle low-case module names
- some fixes on output format

---------------------------------------------------------------------------------
Task 0066 (Jérémie) : KDIF : radiating boundary conditions
---------------------------------------------------------------------------------
- parameters structure (EQKDIF/MENU_KDIF.f90)
- flux computation (EQKDIF/add_kdif_radiativeflux.f90)
! explicit model (no reflection or view coefficients)

---------------------------------------------------------------------------------
Task 0067 (Jérémie) : KDIF : coupled radiation boundary conditions
--------------------------------------------------------------------------------
- computation of view factors (EQKDIF/init_viewfactor.f90)
- computation of exchanged fluxes (EQKDIF/add_kdif_coupled_radflux.f90)
- debug EQKDIF/add_kdif_radiativeflux.f90
- new structure (MATH/SPARSE_MAT.f90)
Rq: needs very important amount of memory

--------------------------------------------------------------------------------
Task 0068 (Jérémie) : IHM : output of boco index and face centers
--------------------------------------------------------------------------------
- define ACTION parameter in BLOCK:PROJECT (default: COMPUTE) 
  > MENU_GEN.f90, def_project.f90
- if ACTION=ANALYSE, switch to "analyse.f90" routine
  write "family_name".fam files with local face index and center coordinates
  > main.f90, analyse.f90, analyse_zone.f90

---------------------------------------------------------------------------------
Task 0069 (Jérémie) : Core : gradient computation
---------------------------------------------------------------------------------

---------------------------------------------------------------------------------
Task 0070 (JG/ER) : NS : Viscous Fluxes
---------------------------------------------------------------------------------

---------------------------------------------------------------------------------
Task 0071 (JG) : Core : Implicitation structure reorganisation
---------------------------------------------------------------------------------
- new structure : BDLU (block DLU)
- new structure : st_mattab in MATRIX_ARRAY (can contain many matrix structures)
  effects on implicit_step, explicit_step, integration_*_ust and calc_flux_*
- split implicit_step, with call to build_implicit and build_implicit_dlu

---------------------------------------------------------------------------------
Task 0072 (JG) : Core : Implicitation reorganisation (include ghost cells)
---------------------------------------------------------------------------------
All ghost cells are included in the implicit system with (for a start) each
an genuine equation dU = 0 (1 in the coefficient matrix, 0 for rhs) : there is
no actual implicitation of boundary conditions
- for now, DLU sparse matrix connectivity is related to an existing element.
- ghost cells are overwritten in the boundary conditions explicit procedure

---------------------------------------------------------------------------------
Task 0073 (Emmanuel) : KDIF : convection boundary condition
---------------------------------------------------------------------------------
- bug : bad assignment of the convection parameter h
- VALIDATION/KDIF/CONV_1D case

---------------------------------------------------------------------------------
Task 0074 (Emmanuel) : Make : restructuration of fields : chained list
---------------------------------------------------------------------------------
- structure field : chained list
- use of field_loc for integration

---------------------------------------------------------------------------------
Task 0075 (Emmanuel) : Make : local convergence on cycle
---------------------------------------------------------------------------------
- local convergence : iterations on cycle until the right field is obtained

---------------------------------------------------------------------------------
Task 0076 (Jérémie) : NS : MUSCL interpolation
---------------------------------------------------------------------------------
- read parameters (defspat)
- array computation of vectors & tensors (GEO3D, TENSOR)
- limiter definition (LIMITER)
- MUSCL interpolation (hres_ns_muscl)

---------------------------------------------------------------------------------
Task 0077 (Jérémie) : Make : DEFFIELD restructuration
---------------------------------------------------------------------------------
- split into DEFFIELD  (FIELD         structure)
             GENFIELD  (GENERICFIELD  structure)
             BASEFIELD (SCA/VEC/TEN FIELD structures)

---------------------------------------------------------------------------------
Task 0078 (Jérémie) : Mesh : Scale function
---------------------------------------------------------------------------------
- implemented in MESH/calc_ust_mesh
- SCALE parameter in MESH block

---------------------------------------------------------------------------------
Task 0079 (Jérémie) : NS : AUSM-M scheme
---------------------------------------------------------------------------------
- AUSM-M
- no jacobian matrix

-------------------------------------------------------------------------------
Task 0080 (Jérémie) : Solve : BICG, BICG-JACOBI, CGS for DLU sparse matrix
---------------------------------------------------------------------------------
- dlu_bicg : BICG method, convergence twice faster than Jacobi
- dlu_bicg : BICG method with Jacobi preconditionning, same efficiency as BICG
             (converges faster but more costly)
- dlu_cgs : CGS method (CG squared), 3 times faster than Jacobi
- implement matrix-vector multiplication in SPMAT_DLU
!!! should correct use of same dummy argument in implicit_step

---------------------------------------------------------------------------------
Task 0081 (Jérémie) : Solve : Implicit resolution of blocked sparse matrices
---------------------------------------------------------------------------------
- build_implicit
- implicit_step : split solve part into implicit_solve
- GENFIELD : pack & unpack functions
- call to solve_jacobi/bicg/cgs to select right sparse structure
- SPMAT_BDLU : new internal operations to provide stationary iterative methods
- bdlu_bicg  : BICG iterative method for blocked DLU sparse structure
!!! no validation : see task 86

-------------------------------------------------------------------------------
Task 0082 (Jérémie) : KDIF : Anisotropic material
---------------------------------------------------------------------------------
- Defintion of tensor in MATERIAU.f90
- UDF function udf_kdif_aniso.f90

-------------------------------------------------------------------------------
Task 0085 (Jérémie) : NS : HLLC scheme
---------------------------------------------------------------------------------
- HLLC scheme (Batten version) in EQNS

-------------------------------------------------------------------------------
Task 0086 (Jérémie) : NS : Implicit jacobian matrices for HLL fluxes & BICGSTAB
---------------------------------------------------------------------------------
- add call to jacobian matrix in EQNS/calc_flux_hlle and EQNS/calc_flux_hllc
- HLLE jacobian matrix compted by EQNS/calc_jac_hll and EQNS/calc_jacflux (true jacobian)
- diagonal jacobian matrix based on spectral radius in EQNS/calc_jac_hlldiag
- new BICG-Stab iterative method MATH/bdlu_bicgstab and MATH/solve_bicgstab (only BDLU)
- associated paramters in PARAM/MENU_NUM, PARAM/def_spat and PARAM/def_time

-------------------------------------------------------------------------------
Task 0086b (Jérémie) : NS : Implicit jacobian matrices for HLL fluxes
---------------------------------------------------------------------------------
- correction calc_jacflux

-------------------------------------------------------------------------------
Task 0087 (Jérémie) : NS : Symmetric point for wall boundary conditions (Euler computations)
---------------------------------------------------------------------------------
- changed symmetric boco from ghostface to ghostcell (PARAM/MENU_BOCO)
- actual symmetric vector in ZONE/calcboco_ust_sym.f90
- updated ZONE/init_connect_grid / removed ZONE/init_connect_ust
- new file ZONE/init_ustboco_ghostcell.f90 (symmetric point from face)

---------------------------------------------------------------------------------
Task 0088 (Jérémie) : NS : increasing CFL number with convergence (bounded by CFL_MAX)
---------------------------------------------------------------------------------
- CFL computation in MAIN/calc_zonetimestep, used in EQNS/calc_ns_timestep
- reading CFL_MAX (default assigned to CFL value) in PARAM/def_time
- !!! to be tested with unsteady computations !!!

-------------------------------------------------------------------------------
Task 0089 (Jérémie) : NS : MUSCL correction
---------------------------------------------------------------------------------
- addition of gradients were commented !

---------------------------------------------------------------------------------
Task 0090 (Jérémie) : Opt : GEO3D optimization (array calls)
---------------------------------------------------------------------------------
- flux_to_res : array computation of surf(:) * flux(:)

---------------------------------------------------------------------------------
Task 0095 (Jérémie) : Core : local time step
---------------------------------------------------------------------------------
- keep local time step in memory (MGRID)
- new option for DTCALC : DTCALC = LOCAL_STABILITY_CONDITION

---------------------------------------------------------------------------------
Task 0096 (Jérémie) : NS : change default implicit method to BICGSTAB
---------------------------------------------------------------------------------
- BICGSTAB method, 50 iteration max, residual to reach: 1.e-1

---------------------------------------------------------------------------------
Task 0097 (Jérémie) : NS : MUSCL method improvement
---------------------------------------------------------------------------------
The limiting process is done between a centered gradient and the face gradient.
The centered gradient contains a part of the face gradient: the MUSCL extrapolation
is then not as limited as for a genuine 1D case. Darwish (JCP ??) proposed an
improvement of the limiting process

---------------------------------------------------------------------------------
Task 0100 (Jérémie) : IHM : Symbolic functions module
---------------------------------------------------------------------------------
- FCT_* modules in MATH

---------------------------------------------------------------------------------
Task 0103 (Emmanuel): NS : Viscous fluxes
---------------------------------------------------------------------------------
- Viscous fluxes computation, Sutherland viscosity

---------------------------------------------------------------------------------
Task 0104 (Emmanuel): NS : Wall boundary conditions
---------------------------------------------------------------------------------
- wall boundary conditions : isothermal or flux

---------------------------------------------------------------------------------
Task 0105 (Emmanuel): Out : TECPLOT output
---------------------------------------------------------------------------------
- TECPLOT output for NS : cell center

---------------------------------------------------------------------------------
Task 0106 (Emmanuel): Coupl : KDIF - NS coupling
---------------------------------------------------------------------------------
- Change in exchange routines, creation of boundary conditions

--------------------------------------------------------------------------------
Task 0107 (Emmanuel): Out : change in Tecplot output
---------------------------------------------------------------------------------
- 1 file per zone : "name"_"zone index".dat
- necessary for cases in which zones do not have the same outputs
  (for example : a solid and a fluid zone)

---------------------------------------------------------------------------------
Task 0108 (Emmanuel): KDIF :change in approximation of temperature for flux 
                            and convection boundary conditions
---------------------------------------------------------------------------------
- Use of gradients for the approximate temperature (used for the estimation 
  of gradients) in convection and flux boundary condition

---------------------------------------------------------------------------------
Task 0109 (Emmanuel): KDIF/NS : adiabatic boundary condition
---------------------------------------------------------------------------------
- Use of flux boundary condition structure, with flux automatically set to zero

---------------------------------------------------------------------------------
Task 0110 (Emmanuel): NS : thermal boundary condition defined in files
---------------------------------------------------------------------------------
- like in KDIF, temperature and heat flux at the boundaries can be defined in a
  file (TEMP_FILE or FLUX_FILE =) for non uniform boundary conditions
  (UNIFORMITY = NON_UNIFORM)

---------------------------------------------------------------------------------
Task 0111 (Emmanuel): NS : change in the boundary heat flux
---------------------------------------------------------------------------------
- like in KDIF, boundary heat flux is changed thanks to a special routine that
  applies a given flux

---------------------------------------------------------------------------------
Task 0112 (Emmanuel): NS : constant viscosity
---------------------------------------------------------------------------------
- constant viscosity, called with VISCOSITY = CONSTANT, DYN_VISC = ...
  (BLOCK:MODEL)
- changed files : MENU_NS.f90, def_model_ns.f90,calc_flux_viscous.f90, 
  ns_bocoflux.f90, setboco_ns_flux.f90, accumulfluxcorr.f90, 
  setboco_ns_hconv.f90, donnees_echange.f90

---------------------------------------------------------------------------------
Task 0113 (Emmanuel): Out : periodical writing of interface temperature
---------------------------------------------------------------------------------
- interface temperature written every N cycle.
- N given by : PERIOD = N (BLOCK:OUTPUT)
- changed files : def_output.f90, output_tec_temp.f90, MENU_GEN.f90

---------------------------------------------------------------------------------
Task 0114 (Emmanuel): NS : linear viscosity
---------------------------------------------------------------------------------
- viscosity proportional to temperature, called with VISCOSITY = LINEAR, 
  COEF=...
  (BLOCK:MODEL)
- changed files : MENU_NS.f90, def_model_ns.f90,calc_flux_viscous.f90,
  ns_bocoflux.f90, setboco_ns_flux.f90, accumulfluxcorr.f90,
  setboco_ns_hconv.f90, donnees_echange.f90

---------------------------------------------------------------------------------
Task 0115 (Emmanuel): NS / KDIF : initialization with a file
---------------------------------------------------------------------------------
- initialization with a file in TECPLOT format, with values given to
  cell centers : x y z velocity pressure temperature for NS ; x y z temperature
  for KDIF
- changed files : def_init.f90, MENU_INIT.f90, init_ns_ust.f90, 
  init_champ_ust.f90, init_kdif_ust.f90, output_tec_ust_ctr.f90

---------------------------------------------------------------------------------
Task 0116 (Emmanuel): Coupl : steady computation with set maximum number of cycles
---------------------------------------------------------------------------------
- PROJECT -> NCYCLE gives the maximum number of cycles (default : larger integer)
- changed files : integration.f90, def_project.f90

---------------------------------------------------------------------------------
Task 0117 (Emmanuel): NS : change in computation of CFL as a function of residual
---------------------------------------------------------------------------------
- CFL is no longer a function of the local residual of cycle but of the global residual 
- changed files : integration.f90, integration_cycle.f90, integrationmacro_zone.f90,
   calc_zonetimestep.f90

---------------------------------------------------------------------------------
Task 0118 (Emmanuel): Debug : change in calls for Warning in implicit inversions
---------------------------------------------------------------------------------
- changed files : bdlu_bicgstab.f90, dlu_jacobi.f90, dlu_bicg_pjacobi.f90, dlu_cgs.f90,
   dlu_bicg.f90

---------------------------------------------------------------------------------
Task 0119 (Emmanuel): Coupl : Coupling in implicit
---------------------------------------------------------------------------------
- changed files : implicit_step.f90

---------------------------------------------------------------------------------
Task 0120 (Emmanuel): Debug : Pi/P truncated to 1 if Pi<P
---------------------------------------------------------------------------------
- changed files : EQNS.f90

---------------------------------------------------------------------------------
Task 0121 (Jeremie): NS : Change wall conditions to ghostcells
---------------------------------------------------------------------------------
Due to problems in computing boundary layers (mass flux is certified to be nul
with a zero velocity on the face)
- MENU_BOCO.f90
- EQNS.f90 : change boundary conditions implementation
- init_ustboco_ghostcell.f90 : specific symmetrical point for these bocos
- setboco_ns_*.f90 : change computed velocities and temperatures




